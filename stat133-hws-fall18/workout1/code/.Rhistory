dat = read.csv('../data/nba2018.csv', header=TRUE, stringsAsFactors=FALSE)
library('dplyr', 'ggplot2') #import library
dat = read.csv('../data/nba2018.csv', header=TRUE, stringsAsFactors=FALSE)
which(dat$experience=='R')
which(dat$experience == 'R')
f = read.csv('../data/nba2018.csv', header=TRUE, stringsAsFactors=FALSE)
data = f
data$experience[which(f$experience == 'R')] = 0
data$experience
#convert column into integers
data$experience = int(data$experience)
#convert column into integers
data$experience = as.integer(data$experience)
#convert column into integers
data$experience = as.integer(data$experience)
data$experience
#Transform salary in millions
data$salary = data$salary / 1000000
data$salary
data$position
factor(data$position)
#Relabel position factors using more descriptive names
factor(data$position) = c('c'='center', 'power_fwd', 'point_guard', 'small_fwd', 'short_guard')
#Relabel position factors using more descriptive names
factor(data$position) = c(center', 'power_fwd', 'point_guard', 'small_fwd', 'short_guard')
#Relabel position factors using more descriptive names
factor(data$position) = c('center', 'power_fwd', 'point_guard', 'small_fwd', 'short_guard')
#Relabel position factors using more descriptive names
data$position = c('C'='center', 'PF'='power_fwd', 'PG'='point_guard', 'SF'='small_fwd', 'SG'='short_guard')
factor(data$position)
levels(data$position)
levels(data$position)
level(data$position)
factor(data$position)
data$position
typeof(data$position)
levels(factor(data$position))
data$position[which(f$position=='C')] = 'center'
data$position[which(f$position=='PF')] = 'power_fwd'
data$position[which(f$position=='PG')] = 'point_guard'
data$position[which(f$position=='SF')] = 'small_fwd'
data$position[which(f$position=='SG')] = 'short_guard'
data$position
?mutate
?mutate
#Add new variables
mutate(data, missed_fg=(data$field_goals_atts - data$field_goals))
library('dplyr', 'ggplot2') #import library
#Add new variables
mutate(data, missed_fg=(data$field_goals_atts - data$field_goals))
mutate(data, missed_ft=(data$points1_atts - data$points1))
mutate(data, rebounds=(data$off_rebounds + data$def_rebounds))
mutate(data, efficiency=((data$points + data$rebounds + data$assists + data$steals + data$blocks -
data$missed_fg - data$missed_ft - data$turnovers) /
data$games))
mutate(data, efficiency=(data$points + data$rebounds + data$assists + data$steals + data$blocks -
data$missed_fg - data$missed_ft - data$turnovers) /
data$games)
mutate(data, rebounds=(data$off_rebounds + data$def_rebounds))
mutate(data, efficiency=(data$points + data$rebounds + data$assists + data$steals + data$blocks -
data$missed_fg - data$missed_ft - data$turnovers) /
data$games)
(data$points + data$rebounds + data$assists + data$steals + data$blocks -
data$missed_fg - data$missed_ft - data$turnovers) /
data$games)
mutate(data, efficiency=(data$points + data$rebounds + data$assists + data$steals + data$blocks -
data$missed_fg - data$missed_ft - data$turnovers) /
data$games)
(data$points + data$rebounds + data$assists + data$steals + data$blocks -
data$missed_fg - data$missed_ft - data$turnovers) /
data$games
data$rebounds
mutate(data, rebounds=(data$off_rebounds + data$def_rebounds))
mutate$missed_fg
data$missed_fg
data = mutate(data, missed_fg=(data$field_goals_atts - data$field_goals))
data = mutate(data, missed_ft=(data$points1_atts - data$points1))
data = mutate(data, rebounds=(data$off_rebounds + data$def_rebounds))
data = mutate(data, efficiency=(data$points + data$rebounds + data$assists + data$steals + data$blocks -
data$missed_fg - data$missed_ft - data$turnovers) /
data$games)
data$efficiency
data$missed_fg
?sink
sink(../output/efficiency-summary.txt)
summary(data$efficiency)
sink()
sink(../output/efficiency-summary.txt)
summary(data$efficiency)
sink(../output/efficiency-summary.txt)
sink(../output/efficiency-summary.txt)
sink(../output/'efficiency-summary.txt')
sink('../output/efficiency-summary.txt')
summary(data$efficiency)
sink()
data$team
#Create nba2018-teams.csv
teams = data.frame(team=data$team)
teams
level(data$team)
level(data$teams)
levels(data$teams)
levels(factor(data$teams))
#Create nba2018-teams.csv
team
#Create nba2018-teams.csv
data$team
#Create nba2018-teams.csv
typeof(data$team)
#Create nba2018-teams.csv
as.factor(data$team)
#Create nba2018-teams.csv
levels(as.factor(data$team))
#Create nba2018-teams.csv
team=levels(as.factor(data$team))
team
?aggregate
experience=aggregate(data$experience, FUN=sum)
experience=aggregate(data$experience, by=team, FUN=sum)
team
c(team)
experience=aggregate(data$experience, by=c(team), FUN=sum)
experience=aggregate(data$experience, by=list(team), FUN=sum)
experience=aggregate(data$experience, data$team, FUN=sum)
experience=aggregate(data$experience, list(data$team), FUN=sum)
experience
experience=aggregate(data$experience, list(data$team), FUN=sum/10)
experience=aggregate(data$experience, list(data$team), FUN=naivediv(sum, 10))
experience=aggregate(data$experience, list(data$team), FUN=div(sum, 10))
??division
experience=aggregate(data$experience, list(data$team), FUN=sum)
experience
?apply
experience=apply(experience,FUN=/10)
2/1
experience=apply(experience,FUN= /10)
experience=apply(experience,FUN= / 10)
salary = aggregate(data$salary, list(data$team), FUN=sum)
salary
?round
salary = aggregate(data$salary, list(data$team), FUN=round(sum, digits=2))
salary = aggregate(data$salary, list(data$team), FUN=sum)
salary
?aggregate
?aggregate.data.frame
salary = round(salary,2)
salary = round(salary, 2)
aggregate.data.frame(data, list(data$team), FUN=sum)
aggregate.data.frame(data, list(data$team), FUN='sum')
data
aggregate.data.frame(c(data$experience, data$experience), list(data$team), FUN='sum')
group_by
library('dplyr', 'ggplot2') #import library
?lapply
lapply(data, FUN=sum)
lapply(c(data$experience, data$salary), FUN=sum)
lapply(c(data$experience, data$salary), FUN=sum)
?aggregate.data.frame
teams = data.frame(c(data$experience, data$salary), FUN=sum)
?data.frame
teams = data.frame(c(data$experience, data$salary))
aggregate.data.frame(teams, FUN=sum)
aggregate.data.frame(teams, list(data$team), FUN=sum)
teams
data$team
nba2018teams=
table(data)
nba2018teams=
data.table(data)
nba2018teams=
data.table(dat)
library(data.table)
nba2018teams=
data.table(dat)
data.table(dat)
aggregate.data.frame(teams, list(dat$team), FUN=sum)
dat$team
teams
aggregate.data.frame(dat, list(dat$team), FUN=sum)
teams = data.frame(exp=dat$experience, sal=dat$salary))
teams = data.frame(exp=dat$experience, sal=dat$salary)
teams
dat = f
#replace all "R" with 0
dat$experience[which(f$experience == 'R')] = 0
#convert column into integers
dat$experience = as.integer(dat$experience)
#Transform salary in millions
dat$salary = dat$salary / 1000000
dat$position[which(f$position=='C')] = 'center'
dat$position[which(f$position=='PF')] = 'power_fwd'
dat$position[which(f$position=='PG')] = 'point_guard'
dat$position[which(f$position=='SF')] = 'small_fwd'
dat$position[which(f$position=='SG')] = 'short_guard'
dat = mutate(dat, missed_fg=(dat$field_goals_atts - dat$field_goals))
dat = mutate(dat, missed_ft=(dat$points1_atts - dat$points1))
dat = mutate(dat, rebounds=(dat$off_rebounds + dat$def_rebounds))
dat = mutate(dat, efficiency=(dat$points + dat$rebounds + dat$assists + dat$steals + dat$blocks -
dat$missed_fg - dat$missed_ft - dat$turnovers) /
dat$games)
#Create nba2018-teams.csv
team = levels(as.factor(dat$team))
teams = data.frame(exp=dat$experience, sal=dat$salary)
teams
aggregate.data.frame(dat, list(dat$team), FUN=sum)
aggregate.data.frame(teams, list(dat$team), FUN=sum)
teams = data.frame(experience=dat$experience, salary=dat$salary, points3=dat$points3,
points2=dat$points2, points1=dat$points1, points=dat$points,
off_rebounds=dat$off_rebounds, def_rebounds=dat$def_rebounds,
assists=dat$assists, steals=dat$steals, blocks=dat$blocks,
turnovers=dat$turnovers, fouls=dat$fouls, efficiency=dat$efficiency)
aggregate.data.frame(teams, list(dat$team), FUN=sum)
teams = aggregate.data.frame(teams, list(dat$team), FUN=sum)
round(teams, 2)
teams
teams = data.frame(experience=dat$experience, salary=dat$salary, points3=dat$points3,
points2=dat$points2, points1=dat$points1, points=dat$points,
off_rebounds=dat$off_rebounds, def_rebounds=dat$def_rebounds,
assists=dat$assists, steals=dat$steals, blocks=dat$blocks,
turnovers=dat$turnovers, fouls=dat$fouls, efficiency=dat$efficiency)
round(teams, 2)
teams = aggregate.data.frame(teams, list(dat$team), FUN=sum)
teams
teams = data.frame(experience=dat$experience, salary=dat$salary, points3=dat$points3,
points2=dat$points2, points1=dat$points1, points=dat$points,
off_rebounds=dat$off_rebounds, def_rebounds=dat$def_rebounds,
assists=dat$assists, steals=dat$steals, blocks=dat$blocks,
turnovers=dat$turnovers, fouls=dat$fouls, efficiency=dat$efficiency)
teams = round(teams, 2)
teams = aggregate.data.frame(teams, list(dat$team), FUN=sum)
teams
?write.csv
sink('../data/teams-summary.txt')
summary(teams)
sink()
write.csv(teams, file='../data/nba2018-teams.csv')
df = read.csv(../data/nba2018-teams)
df = read.csv('../data/nba2018-teams')
df = read.csv2('../data/nba2018-teams')
library('dplyr', 'ggplot2')
df = read.csv('../data/nba2018-teams')
df = read.csv('../data/nba2018-teams')
df = read.csv('../data/nba2018-teams.csv')
df
typeof(df)
class(df)
df$Group.1
ggplot2(df, aes(x=df$Group.1, y=df$salary))
ggplot(df, aes(x=df$Group.1, y=df$salary))
library('dplyr', 'ggplot2')
ggplot(df, aes(x=df$Group.1, y=df$salary))
library('dplyr', 'ggplot2')
ggplot(df, aes(x=df$Group.1, y=df$salary))
library(dplyr, ggplot2)
ggplot(df, aes(x=df$Group.1, y=df$salary))
ggplot2(df, aes(x=df$Group.1, y=df$salary))
ggplot2
library(dplyr, ggplot2)
df = read.csv('../data/nba2018-teams.csv')
ggplot(df, aes(x=df$Group.1, y=df$salary))
library(dplyr, ggplot2)
ggplot(df, aes(x=df$Group.1, y=df$salary))
library(c(dplyr, ggplot2))
library(c('dplyr', 'ggplot2'))
(dplyr, ggplot2)
library(dplyr, ggplot2)
ggplot(df, aes(x=df$Group.1, y=df$salary))
library(ggplot2)
ggplot(df, aes(x=df$Group.1, y=df$salary))
library(dplyr)
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
geom_bar(stat='identity')
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
geom_bar(stat='identity') +
coord_flip()
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
opts(title="NBA Teams ranked by Total Salary")
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
title="NBA Teams ranked by Total Salary" +
geom_bar(stat='identity') +
coord_flip()
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
opt(title="NBA Teams ranked by Total Salary") +
geom_bar(stat='identity') +
coord_flip()
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
opts(title="NBA Teams ranked by Total Salary") +
geom_bar(stat='identity') +
coord_flip()
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
ggtile(title="NBA Teams ranked by Total Salary") +
geom_bar(stat='identity') +
coord_flip()
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
ggtitle(title="NBA Teams ranked by Total Salary") +
geom_bar(stat='identity') +
coord_flip()
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
geom_bar(stat='identity') +
coord_flip()
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
xlab('Salary(in millions)') +
ylab('Team')
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
xlab('Salary(in millions)') +
ylab('Team') +
geom_bar(stat='identity') +
coord_flip()
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip()
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_line(stat='identity') +
coord_flip()
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip()
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
geom_line() +
coord_flip()
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept = mean(count)))
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept = avg))
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept = mean))
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept = mean(df$salary)))
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$salary)), color='red')
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$salary)), color='red', alpha=0.5)
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$salary)), color='red', alpha=0.7, size=10)
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$salary)), color='red', alpha=0.7, size=5)
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$salary)), color='red', alpha=0.7, size=2)
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity', color='gray') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$salary)), color='red', alpha=0.7, size=2)
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$salary)), color='red', alpha=0.7, size=2)
ggplot(df, aes(x=df$Group.1, y=df$salary, color='gray')) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$salary)), color='red', alpha=0.7, size=2)
)
ggplot(df, aes(x=df$Group.1, y=df$salary) +
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$salary)), color='red', alpha=0.7, size=2)
ggplot(df, aes(x=df$Group.1, y=df$salary) +
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$salary)), color='red', alpha=0.7, size=2)
ggplot(df, aes(x=df$Group.1, y=df$points)) +
labs(title="NBA Teams ranked by Total Point") +
ylab('Point') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$points)), color='red', alpha=0.7, size=2)
library(dplyr)
library(ggplot2)
df = read.csv('../data/nba2018-teams.csv')
ggplot(df, aes(x=df$Group.1, y=df$salary)) +
labs(title="NBA Teams ranked by Total Salary") +
ylab('Salary(in millions)') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$salary)), color='red', alpha=0.7, size=2)
ggplot(df, aes(x=df$Group.1, y=df$efficiency)) +
labs(title="NBA Teams ranked by Total Efficiency") +
ylab('Efficiency') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(df$efficiency)), color='red', alpha=0.7, size=2)
ggplot(df, aes(x=df$Group.1, y=NFT)) +
labs(title="NBA Teams ranked by Total Non-Free-Throws") +
ylab('Non-Free-Throws') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(NFT)), color='red', alpha=0.7, size=2)
NFT = df$points - df$poins1
NFT = df$points - df$poins1
ggplot(df, aes(x=df$Group.1, y=NFT)) +
labs(title="NBA Teams ranked by Total Non-Free-Throws") +
ylab('Non-Free-Throws') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(NFT)), color='red', alpha=0.7, size=2)
NFT
NFT = df$points - df$poins1
NFT
df$poins1
df$points1
NFT = df$points - df$points1
NFT = df$points - df$points1
ggplot(df, aes(x=df$Group.1, y=NFT)) +
labs(title="NBA Teams ranked by Total Non-Free-Throws") +
ylab('Non-Free-Throws') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(NFT)), color='red', alpha=0.7, size=2)
NFT = df$points - df$points1
ggplot(df, aes(x=df$Group.1, y=NFT)) +
labs(title="NBA Teams ranked by Total Non-Free-Throws") +
ylab('Non-Free-Throws') +
xlab('Team') +
geom_bar(stat='identity') +
coord_flip() +
geom_hline(aes(yintercept=mean(NFT)), color='red', alpha=0.7, size=2)
